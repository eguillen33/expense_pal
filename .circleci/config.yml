version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/python:3.12

jobs:
  lint:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: pip install flake8
      - run:
          name: Run Flake8 Linting
          command: flake8 expense_pal.py --max-line-length=100 --statistics

  expense-pal:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Expense Pal welcome note"
          command: echo "Welcome to the Expense Pal CI/CD pipeline!"
      - run:
          name: "Install Python, Pip, and Tkinter"
          command: | 
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip python3-tk
      - run:
          name: "Install dependencies"
          command: pip3 install -r requirements.txt
      - run:
          name: "Run unit tests"
          command: python3 -m unittest discover -s tests

  build-and-push-docker:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            docker build -t edguillen/expense-pal:latest .
      - run:
          name: Authenticate to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push Docker Image
          command: |
            docker push edguillen/expense-pal:latest

  create-github-release:
    docker: 
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Install Curl and jq
          command: |
            sudo apt-get update
            sudo apt-get install -y curl jq
      - run:
          name: Configure Git user identity
          command: |
            git config --global user.email "id4eguillen@gmail.com"
            git config --global user.name "eguillen33"
      - run:
          name: Create GitHub Release
          command: |
            VERSION="v$(date +'%Y%m%d%H%M%S')"  # Use timestamp as version
            git tag -a $VERSION -m "Release $VERSION"
            git push origin $VERSION

            curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d '{
                "tag_name": "'"$VERSION"'",
                "target_commitish": "main", 
                "name": "'"$VERSION"'",
                "body": "Release of version '"$VERSION"'",
                "draft": false,
                "prerelease": false
            }' https://api.github.com/repos/eguillen33/expense_pal/releases

# Orchestrate jobs using workflows
workflows:
  expense-pal-workflow: # Name of the workflow
    # Inside the workflow, declare jobs to run 
    jobs:
      - lint
      - expense-pal:
          requires:
            - lint
      - build-and-push-docker:
          requires:
            - expense-pal
      - create-github-release:
          requires:
            - build-and-push-docker
